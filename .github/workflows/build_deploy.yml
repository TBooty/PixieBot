permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

name: PixieBot

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::731033992095:role/github-actions-role
        role-duration-seconds: 900 # the ttl of the session, in seconds.
        aws-region: us-east-2 # use your region here.

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: 1.0
        bot_prefix: ${{ secrets.BOT_PREFIX }}
        discord_tokne: ${{ secrets.DISCORD_TOKEN }}
      run: |
        # Build a docker container and push it to ECR 
        cd PixieBot
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"